В Java символьная строка представляет собой последовательность символов.
В отличие от других языков программирования, где символьные строки представлены
последовательностью символов, в Java они являются объектами класса String.
В результате создания объекта типа String получается неизменяемая символьная
строка, т.е. невозможно изменить символы имеющейся строки. При любом изменении
строки создается новый объект типа String, содержащий все изменения.
Если требуются изменяемые строки, могут быть использованы классы StringBuilder и StringBuffer.

В отличие от класса String класс StringBuilder представляет собой изменяемые
последовательности символов. В классе StringBuilder определены следующие 
четыре конструктора: StringBuilder(), StringBuilder (int size),
StringBuilder (String obj), StringBuilder (CharSequence obj).
Первый конструктор по умолчанию резервирует место для 16 символов.
Второй конструктор принимает целочисленный аргумент, задающий размер буфера.
Третий конструктор принимает аргумент типа String, задающий начальное
содержимое объекта типа StringBuilder и резервирующий место для 16 символов.
Выделение места для 16 дополнительных символов позволяет сэкономить время,
затрачиваемое на перераспределение памяти при незначительных изменениях
начальной строки. Четвертый конструктор создает объект из последовательности символов.

